<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= title %></title>
  <!-- add favicon -->
  <link rel="icon" type="image/png" href="/resources/images/favicon.ico" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/resources/css/style.css" />

  <!-- fontawesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" crossorigin="anonymous" />
  <!-- Text Editor Summernotes -->
  <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet" />

  <!-- select2 -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/css/select2.min.css" />
</head>

<body>
  <!-- nav -->
  <nav class="navbar banner-section bg-body-light pb-3" style="border-bottom: 1px solid rgb(240, 237, 237)">
    <div class="container-fluid mx-5">
      <a class="navbar-brand" href="/">
        <img src="/resources/images/logo.png" width="250" height="50" />
      </a>

      <!-- Your Search Form -->
      <form class="group" role="search">
        <input type="text" placeholder="Cari artikel" name="text" id="searchInput" class="input-search me-5" data-bs-toggle="modal" data-bs-target="#searchModal" />
        <svg fill="#000000" width="20px" height="20px" viewBox="0 0 1920 1920" xmlns="http://www.w3.org/2000/svg">
          <path d="M790.588 1468.235c-373.722 0-677.647-303.924-677.647-677.647 0-373.722 303.925-677.647 677.647-677.647 373.723 0 677.647 303.925 677.647 677.647 0 373.723-303.924 677.647-677.647 677.647Zm596.781-160.715c120.396-138.692 193.807-319.285 193.807-516.932C1581.176 354.748 1226.428 0 790.588 0S0 354.748 0 790.588s354.748 790.588 790.588 790.588c197.647 0 378.24-73.411 516.932-193.807l516.028 516.142 79.963-79.963-516.142-516.028Z" fill-rule="evenodd"></path>
        </svg>
        <a href="#" class="me-4 fs-3" data-bs-toggle="modal" data-bs-target="#notif">
          <i class="fa-regular fa-bell text-black"></i>
        </a>
        <a href="/profile/<%= first_name %>/<%= id %>">
          <img src="/resources/images/hero.png" width="50" height="50" class="rounded" alt="" />
        </a>
      </form>

      <!-- Dropdown Menu -->
      <script>
        document.addEventListener("DOMContentLoaded", function() {
          // Dapatkan elemen yang akan dijadikan trigger
          var triggerElement = document.querySelector('a[href="/profile/<%= first_name %>/<%= id %>"]');

          // Buat elemen dropdown
          var dropdownElement = document.createElement('div');
          dropdownElement.className = 'dropdown-menu';
          dropdownElement.style.position = 'absolute';
          dropdownElement.style.top = '100%';
          dropdownElement.style.left = '200px';
          dropdownElement.innerHTML = `
            <a class="dropdown-item" href="/profile/<%= first_name %>/<%= id %>"><i class="fas fa-user"></i> Edit Profile</a>
            <a class="dropdown-item" href="#" id="logout-link"><i class="fas fa-sign-out-alt"></i> Logout</a>
          `;

          // Tambahkan dropdown ke trigger
          triggerElement.parentNode.insertBefore(dropdownElement, triggerElement.nextSibling);

          // Tambahkan event listener untuk menampilkan/menyembunyikan dropdown
          triggerElement.addEventListener('click', function(e) {
            e.preventDefault(); // Menonaktifkan aksi default link
            e.stopPropagation();
            dropdownElement.classList.toggle('show');
          });

          // Tambahkan event listener untuk menutup dropdown ketika klik di luar
          window.addEventListener('click', function(e) {
            if (dropdownElement.classList.contains('show')) {
              dropdownElement.classList.remove('show');
            }
          });

          document.getElementById('logout-link').addEventListener('click', function(e) {
  e.preventDefault();
  const token = `<%= token %>`
  
  // Cek apakah token ada
  if (!token) {
    console.error('Token tidak ditemukan. Silahkan login terlebih dahulu.');
    return;
  }

  console.log("token",token);
  // Lakukan proses logout di sini
  $.ajax({
    url: '/api/v1/auth/logout', // Hanya endpoint
    type: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    success: function(response) {
      // Redirect ke "/" ketika berhasil logout
      window.location.href = "/";
      console.log(response.message); // Tampilkan pesan sukses
    },
    error: function(jqXHR, textStatus, errorThrown) {
      // Jika token tidak valid, tampilkan pesan error
      if (jqXHR.status === 401 || jqXHR.status === 403) {
        console.error('Token tidak valid atau sudah kadaluarsa. Silahkan login ulang.');
      } else {
        // Handle other errors here
        console.error('Error:', textStatus, ', Details:', errorThrown);
        console.error('Response body:', jqXHR.responseText);
      }
    }
  });
});

        })
      </script>

      <!-- Modal Notif-->
      <div class="modal fade" id="notif" tabindex="-1" aria-labelledby="notifLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h4 class="modal-title" id="notifLabel">Notifikasi</h4>
              <button type="button" class="btn-close rounded-circle" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="container">
                <ul class="nav nav-underline nav-fill" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link" id="all-tab" data-bs-toggle="tab" href="#all" role="tab" aria-controls="all">All</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" id="recent-tab" data-bs-toggle="tab" href="#recent" role="tab" aria-controls="recent">Recent</a>
                  </li>
                </ul>

                <div class="tab-content">
                  <div class="tab-pane fade" id="all" role="tabpanel" aria-labelledby="all-tab">
                    <div class="list-group">
                      <div class="container py-3 border-top justify-content-center">
                        <figure class="figure">
                          <img src="/resources/images/notif-empty.png" class="figure-img img-fluid">
                          <figcaption class="figure-caption text-center fw-bold">Belum ada notifikasi apapun</figcaption>
                        </figure>
                      </div>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="recent" role="tabpanel" aria-labelledby="recent-tab">
                    <div class="list-group">
                      <div class="container py-3 border-top justify-content-center">
                        <figure class="figure">
                          <img src="/resources/images/notif-empty.png" class="figure-img img-fluid">
                          <figcaption class="figure-caption text-center fw-bold">Belum ada notifikasi apapun</figcaption>
                        </figure>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- search Modal -->
      <div class="modal fade" id="searchModal" tabindex="-1" aria-labelledby="searchModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <input type="text" class="form-control mb-3" id="searchInputModal" placeholder="Ketik disini...">
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody">
              <!-- Added id for modal body -->
              <!-- Article list will be rendered here -->
            </div>
            <div class="text-center">
              <!-- Animasi Loading -->
              <div class="spinner-container d-none" id="loadingSpinner">
                <div class="spinner-border text-1c0c41" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
            <a id="loadMoreBtn" class="btn btn-primary d-none" href="#">Lihat Selengkapnya</a>
          </div>
        </div>
      </div>

      <script>
        // Fungsi debounce
        function debounce(func, delay) {
          let timer;
          return function() {
            const context = this;
            const args = arguments;
            clearTimeout(timer);
            timer = setTimeout(() => {
              func.apply(context, args);
            }, delay);
          };
        }

        document.addEventListener("DOMContentLoaded", function() {
          const searchInputModal = document.getElementById("searchInputModal");
          // const loading = document.getElementById("loading");
          const loadMoreBtn = document.getElementById("loadMoreBtn");
          const searchModal = new bootstrap.Modal(document.getElementById("searchModal"));
          const modalBody = document.getElementById("modalBody");

          let page = 1;
          const articlesPerPage = 3;

          // Fungsi handleSearch yang dibungkus dengan debounce
          const delayedSearch = debounce(handleSearch, 500); // Waktu jeda 500ms

          function handleSearch() {
            // Membersihkan modal body sebelum mengirimkan data ke AJAX
            modalBody.innerHTML = '';
            loadMoreBtn.classList.add("d-none");
            const searchTerm = searchInputModal.value.trim().toLowerCase();
            console.log("Search term:", searchTerm);

            if (searchTerm === "") {
              // Handle empty search term if needed
              return;
            }

            // Show loading spinner
            // loading.classList.remove("d-none");
            $("#loadingSpinner").removeClass("d-none");
            fetch(`https://insight-hub-api.vercel.app/api/v1/search-artikel/search?judul=${searchTerm}`)
              .then(response => response.json())
              .then(data => {
                console.log('Data fetched:', data);
                if (data && data.length > 0) {
                  renderArticles(data);
                  // Show "Lihat Selengkapnya" button after the first search
                  if (data.length > articlesPerPage) {
                    loadMoreBtn.setAttribute("href", `http://localhost:3000/artikel/search-artikel/search?judul=${searchTerm}`);
                    loadMoreBtn.classList.remove("d-none");
                  } else {
                    loadMoreBtn.classList.add("d-none");
                  }
                } else {
                  // Jika tidak ada hasil, tampilkan pesan di modal body
                  modalBody.innerHTML = "<p>No articles found.</p>";
                  // Sembunyikan tombol "Lihat Selengkapnya" jika tidak ada hasil
                  loadMoreBtn.classList.add("d-none");
                }
              })
              .catch(error => {
                console.error('Error fetching articles:', error);
                // Handle error
                // Misalnya, tampilkan pesan kesalahan di modal body
                modalBody.innerHTML = "<p>Error fetching articles. Please try again later.</p>";
                // Sembunyikan tombol "Lihat Selengkapnya" jika terjadi kesalahan
                loadMoreBtn.classList.add("d-none");
              })
              .finally(() => {
                // Hide loading spinner
                // loading.classList.add("d-none");
                $("#loadingSpinner").addClass("d-none");
              });
          }

          function renderArticles(articles) {
            // Clear modal body before rendering new articles
            modalBody.innerHTML = '';

            if (!articles || articles.length === 0) {
              modalBody.innerHTML = "<p>No articles found.</p>";
            } else {
              // Urutkan artikel berdasarkan tanggal pembuatan (createdAt) dari yang terbaru ke yang terlama
              articles.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));

              articles.slice(0, articlesPerPage).forEach(article => {
                const card = document.createElement('div');
                card.classList.add('card', 'mb-3');
                card.style.cursor = "pointer";

                const createdAt = new Date(article.createdAt).toLocaleDateString();
                const updatedAt = new Date(article.updatedAt).toLocaleDateString();

                card.innerHTML = `
                    <div class="row g-0">
                      <div class="col-md-4">
                        <img src="${article.gambar_artikel}" class="img-fluid rounded-start" alt="...">
                      </div>
                      <div class="col-md-8">
                        <div class="card-body">
                          <h5 class="card-title">${article.judul}</h5>
                          <p class="card-text">${article.deskripsi}</p>
                          <div class="row justify-content-end align-items-end">
                            <div class="col-auto">
                              <p class="card-text">
                                <small class="text-muted">Created at ${createdAt}</small><br />
                                <small class="text-muted">Last updated ${updatedAt}</small>
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  `;
                // Add event listener to redirect to article link when card is clicked
                card.addEventListener('click', function() {
                  window.location.href = `/artikel/${article.id}/${encodeURIComponent(article.judul)}`;
                });
                modalBody.appendChild(card);
              });
            }
          }

          // Update search on input change with debounce
          searchInputModal.addEventListener("input", delayedSearch);

          // Show modal on input click
          searchInputModal.addEventListener("click", function() {
            searchModal.show();
          });

          // Redirect on Enter key press
          searchInputModal.addEventListener("keyup", function(event) {
            if (event.key === 'Enter') {
              window.location.href = `/search/${encodeURIComponent(searchInputModal.value.trim())}`;
            }
          });

          // Initially hide "Lihat Selengkapnya" button
          loadMoreBtn.classList.add("d-none");
        });
      </script>


    </div>
  </nav>

  <main class="container mt-5 py-3">
    <button class="btn btn-light mb-3" onclick="history.back()">
      <i class="fas fa-arrow-circle-left fa-lg"></i>
      <span class="ms-2 fs-5">Kembali</span>
    </button>

    <div id="tambahArtikelAlert"></div>

    <h3 class="fw-bold">Tulis Karyamu</h3>
    <form id="formArtikel" class="mt-4" action="/artikel/<%= first_name %>/<%= id %>/add-artikel" method="POST" enctype="multipart/form-data">
      <hr />
      <!-- Judul -->
      <div class="form-group mb-4">
        <input type="text" class="form-control form-control-lg" id="judul" name="judul" placeholder="Masukkan judul" />
      </div>

      <!-- Kategori -->
      <div class="form-group mb-4">
        <select class="form-control form-control-lg kategori" multiple="multiple" id="kategori" name="categories[]" placeholder="Kategori">
          <!-- Generate options dynamically from kategori data -->
          <% kategori.forEach(kat => { %>
          <option value="<%= kat.id %>"><%= kat.nama %></option>
          <% }); %>
        </select>
      </div>

      <!-- Upload Gambar -->
      <div class="form-group mb-4">
        <div id="dropzone" class="dropzone">
          <p>Masukkan gambar cover artikel</p>
        </div>
        <input type="file" class="form-control-file d-none" id="gambar_artikel" name="gambar_artikel" accept="image/*" />
        <div id="imagePreview" class="mt-2 d-none">
          <button type="button" class="btn btn-close" id="clearImagePreview">
            ×
          </button>
          <img src="#" alt="Image Preview" width="100" class="img-thumbnail" />
        </div>
      </div>

      <!-- Deskripsi dengan Summernote -->
      <hr />
      <div class="form-group mb-4">
        <textarea class="form-control form-control-lg border border-dark summernote" id="deskripsi" name="deskripsi" rows="10" placeholder="Deskripsi"></textarea>
      </div>

      <!-- Referensi dengan Summernote -->
      <div class="form-group mb-4">
        <textarea class="form-control form-control-lg" id="link" name="link" rows="10" placeholder="Referensi"></textarea>
      </div>
      <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary rounded-pill">
          Posting
        </button>
      </div>
    </form>
    <!-- Animasi Loading -->
    <div id="loadingOverlay" class="overlay d-none">
      <div class="spinner-border text-1c0c41" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
    </div>
  </main>

  <!-- Load jQuery before Summernote and Select2 -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <!-- Text Editor Summernotes -->
  <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
  <!-- Select2 JS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.full.min.js"></script>
  <!-- Bootstrap Bundle JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>

  <script>
    // Mendapatkan string JSON dari kategori dan mengonversinya menjadi objek JavaScript
    const kategoriString = `<%= JSON.stringify(kategori) %>`;
    const kategori = JSON.parse(kategoriString.replace(/&#34;/g, '"'));
    // console.log(kategori);
    // Memastikan bahwa kategori sudah didefinisikan sebelum digunakan
    $(document).ready(function() {
      $(".kategori").select2({
        data: kategori, // Menggunakan objek kategori sebagai data untuk Select2
        tags: false,
        placeholder: "Pilih Kategori",
        allowClear: true,
        tokenSeparators: [",", " "],
        maximumSelectionLength: 3,
        minimumInputLength: 4,
        selectOnClose: true,
      });

      // Inisialisasi Summernote
      $(".summernote").summernote({
        height: 300,
        toolbar: [
          ["customGroup", ["myText"]],
          ["style", ["style"]],
          ["font", ["bold", "italic", "underline", "clear"]],
          ["fontname", ["fontname"]],
          ["color", ["color"]],
          ["para", ["ul", "ol", "paragraph"]],
          ["insert", ["link", "picture", "video"]],
          ["view", ["fullscreen", "codeview", "help"]],
        ],
        buttons: {
          myText: function(context) {
            var ui = $.summernote.ui;
            var button = ui.buttonGroup([
              ui.button({
                className: "note-btn",
                contents: "Isi Artikel",
                tooltip: "Ketikkan apa yang ingin anda bagikan!",
                click: function() {
                  // Aksi yang dilakukan saat teks diklik
                },
              }),
            ]);
            return button.render();
          },
        },
      });

      // Inisialisasi Summernote
      $("#link").summernote({
        height: 100,
        toolbar: [
          ["customGroup", ["myText"]],
          ["insert", ["link"]],
        ],
        buttons: {
          myText: function(context) {
            var ui = $.summernote.ui;
            var button = ui.buttonGroup([
              ui.button({
                className: "note-btn",
                contents: "Referensi Artikel ->",
                tooltip: "Ctrl+K atau Command+K",
              }),
            ]);
            return button.render();
          },
        },
      });

      // Image Preview
      function readURL(input) {
        if (input.files && input.files[0]) {
          var reader = new FileReader();
          reader.onload = function(e) {
            $("#imagePreview img").attr("src", e.target.result);
            $("#imagePreview").removeClass("d-none");
            $("#dropzone").addClass("d-none");
          };
          reader.readAsDataURL(input.files[0]);
        }
      }

      $("#dropzone").click(function() {
        $("#gambar_artikel").click();
      });

      $("#gambar_artikel").change(function() {
        readURL(this);
      });

      // Clear Image Preview
      $("#clearImagePreview").click(function() {
        $("#gambar_artikel").val("");
        $("#imagePreview").addClass("d-none");
        $("#dropzone").removeClass("d-none");
      });
    });
  </script>

  <script>
    const baseUrl = `<%= baseUrl %>`;
    // Menangkap event submit pada formulir HTML
    $(document).ready(function() {
      $("#formArtikel").submit(function(event) {
        event.preventDefault();

        // Mengambil nilai dari setiap elemen input
        const judul = $("#judul").val();
        const deskripsi = $("#deskripsi").val();
        const link = $("#link").val();
        const gambar_artikel = $("#gambar_artikel")[0].files[0];
        const kategoriId = $("#kategori").val();

        if (!judul || !deskripsi || !link || !gambar_artikel || !kategoriId) {
          alert("Please fill in all fields.");
          return;
        }
        // Membuat FormData untuk mengirim data dengan file gambar
        const formData = new FormData();
        formData.append("judul", judul);
        formData.append("deskripsi", deskripsi);
        formData.append("link", link);
        formData.append("kategoriId", kategoriId);
        formData.append("gambar_artikel", gambar_artikel);

        // debug cek data
        // Mendapatkan iterator dari FormData
        const formDataIterator = formData.entries();
        for (const pair of formDataIterator) {
          console.log(pair[0] + ": " + pair[1]);
        }
        console.log("formData:", JSON.stringify(Object.fromEntries(formData)));

        const endPointCreateArtikel = "/api/v1/artikel/upload";
        const creaArtikel = baseUrl + endPointCreateArtikel;
        // Mengirim data ke server menggunakan permintaan POST
        $.ajax({
          type: "POST",
          url: creaArtikel,
          headers: {
            Authorization: "Bearer <%= token %>",
          },
          data: formData,
          processData: false,
          contentType: false,
          success: function(data) {
  console.log("Data dari server (success):", data);
  if (data.status) {
    $("#tambahArtikelAlert")
      .append(
        `<div class="alert alert-success" style="background-color: #28a745">${data.message}</div>`
      );
    // Ambil first_name dan id dari data token
    const first_name = '<%= first_name %>';
    const id = '<%= id %>';
    // Redirect ke halaman dashboard
    window.location.href = `/dashboard/${first_name}/${id}`;
  } else {
    $("#tambahArtikelAlert").append(
      `<div class="alert alert-danger"> ${data.message} Error: ${data.err}</div>`
    );
  }
},

          error: function(xhr, status, error) {
            const errorData = xhr.responseJSON ?
              xhr.responseJSON :
              "Failed to upload artikel. Please try again later.";
            console.error("Upload artikel error:", errorData);
            console.error("Data dari server (error):", errorData);
            $("#tambahArtikelAlert").append(
              `<div class="alert alert-danger"> ${errorData.message}! &nbsp; Error: ${errorData.error}</div>`
            );
          },
          complete: function() {
            $("#loadingOverlay").addClass("d-none");
          },
        });
      });
    });
  </script>
</body>

</html>